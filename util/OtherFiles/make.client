# When using CUBIT libraries and object files as part of another
# project, include this makefile in the client project's makefile.
# The stand-alone version of CUBIT is also considered a client
# of the CUBIT libraries and objects.

##############################################################################
# Variables to set before compiling CUBIT
# ---------------------------------------
#
# You should have several variables set before calling this makefile.
# These variables can be environment variables or makefile macros.
#
# MACHINE_TYPE - this indicates the machine being used.  For the four
#           supported platforms, they are 'hp', 'da' (dec alpha), 'sg' (sgi),
#           'lin' (Linux) and 'ss' (Sun Solaris).
# CUBIT_BASE_DIR - This indicates where the root of the CUBIT source
#           distribution is located.  It should end with a '/', or be
#           set to nothing if make is called from CUBIT_BASE_DIR.
#############################################################################


##############################################################################
# Variables supplied by make.client
# ---------------------------------
#
# make.client supplies all variables found in CUBIT.xx.  In addition,
# the following are supplied:
#
# CUBIT_VERSION - A string identifying the version of the CUBIT libraries.
#
# SET_CUBIT_COMPILE_OPTIONS - A macro that sets CUBIT_OPT_CXXFLAGS,
#                 whose value is based on options settings.
# SET_CUBIT_LINK_OPTIONS - A macro that sets CUBIT_OPT_LINK, which is the
#                 portion of the link line specifying optional CUBIT libraries,
#                 based on option settings.
# CUBIT_OPT_LINK - The link line for the libraries that are included
#                 because of the options settings.  The value of this
#                 variable is set in the macro SET_CUBIT_LINK_OPTIONS.
# CUBIT_3RD_PARTY_LINK - Non-system 3rd party libaries linked into a standard
#                 CUBIT build.  Acis libraries are an example.
# CUBIT_SYS_LINK - System libraries required by CUBIT.  Split into its own
#                 variable since other projects will probably need the same
#                 system libraries and may wish to have control over where
#                 they appear in the link line, or may wish to define system
#                 libaries themselves.
# CUBIT_LDFLAGS - Link flags in addition to those in CUBIT_OPT_LINK
#                 and CUBIT_BASE_LINK.
# CUBIT_CXXFLAGS - Compile flags needed when including CUBIT headers in a C++
#                 source file.
# CUBIT_CFLAGS - Compile flags needed when including CUBIT headers in a C
#                 source file.
# CUBIT_OPT_CXXFLAGS - Flags based on option settings.  Set in
#                 SET_CUBIT_COMPILE_OPTIONS.
#
# Examples of how to use these variables
# --------------------------------------
# my_app:
# 	${LINK_PREFIX} ${SET_CUBIT_LINK_OPTIONS};\
#	${LINKER} ${DEBUG_FLAG} ${CUBIT_LDFLAGS} main.o\
#	${CUBIT_LIBS_LINK} $${CUBIT_OPT_LINK} ${CUBIT_3RD_PARTY_LINK} \
#       ${CUBIT_SYS_LINK} -o my_app
#
# .cpp.o:
# 	${PREFIX} ${SET_CUBIT_COMPILE_OPTIONS};\
# 	${CXX} ${DEBUG_FLAG} -c $${CUBIT_OPT_CXXFLAGS} ${CUBIT_CXXFLAGS} \
#       ${ALL_CUBIT_INCLUDES} -o $@ $<
##############################################################################

SHELL = /bin/sh

CUBIT_VERSION = 11.1b

include ${CUBIT_BASE_DIR}/util/OtherFiles/cubiti.version

### includes
CUBIT_BASE_INCLUDE = -I$(CUBIT_BASE_DIR) \
                  -I$(CUBIT_BASE_DIR)/df \
                  -I$(CUBIT_BASE_DIR)/util \
                  -I$(CUBIT_BASE_DIR)/geom \
                  -I$(CUBIT_BASE_DIR)/geom/virtual \
                  -I$(CUBIT_BASE_DIR)/geom/facet \
                  -I$(CUBIT_BASE_DIR)/geom/Cholla \
                  -I$(CUBIT_BASE_DIR)/geom/ACIS \
                  -I$(CUBIT_BASE_DIR)/mdb \
                  -I$(CUBIT_BASE_DIR)/cbt_mesquite \
                  -I$(CUBIT_BASE_DIR)/camal/include \
                  -I$(CUBIT_BASE_DIR)/bc \
                  -I$(CUBIT_BASE_DIR)/export_mesh

ALPHA_INCLUDES = -I$(CUBIT_BASE_DIR)/alpha/cable \
		 -I$(CUBIT_BASE_DIR)/alpha/tetdelaunay \
		 -I$(CUBIT_BASE_DIR)/alpha/graftsweep \

CUBIT_BASE_INCLUDE += ${ALPHA_INCLUDES}

ALL_CUBIT_INCLUDES = $(LP_SOLVE_INCLUDE) \
	             ${CUBIT_BASE_INCLUDE} \
                     ${ACIS_INCLUDE} \
                     $(EXODUS_INCLUDE) \
                     $(NETCDF_INCLUDE) \
	             $(GRAPH_DRAWING_INCLUDE) \
                     ${HOOPS_INCLUDE} \
                     ${VERDICT_INCLUDE} \
                     ${OPTMS_INCLUDE} \
                     ${MOTIF_INCLUDE} \
                     ${X11_INCLUDE}   \
                     ${C_INCLUDE}     \
                     ${CC_INCLUDE}    \
                     ${EXTRA_INCLUDE} \
                     ${SYS_INCLUDE} \
                     ${MESQUITE_INCLUDE}


CGM_INCLUDES = \
                  -I$(CUBIT_BASE_DIR)/util \
                  -I$(CUBIT_BASE_DIR)/geom \
                  -I$(CUBIT_BASE_DIR)/geom/virtual \
		  -I$(CUBIT_BASE_DIR)/geom/facet \
		  -I$(CUBIT_BASE_DIR)/geom/Cholla \
                  -I$(CUBIT_BASE_DIR)/geom/ACIS 

CCAPI_INCLUDES = -I${CGM_BASE_DIR}/ccapi/util \
		 -I${CGM_BASE_DIR}/ccapi/list \
                 -I${CGM_BASE_DIR}/ccapi/geom

#### libraries

EXODUS_LINK     = -L$(EXODUS_LIB_DIR) ${EXODUS_LIBS} -L${NETCDF_LIB_DIR} ${NETCDF_LIBS}

HOOPS_LINK      = -L${HOOPS_LIB_DIR} ${HOOPS_LIB} ${EXTRA_HOOPS_LIB}

SHOWVIZ_LINK    = -Lshowviz/lib ${EXPORT_SYMBOLS} -lshowviz_geom_mesh \
                  ${EXPORT_SYMBOLS} -lshowviz_bc ${EXPORT_SYMBOLS} -lshowviz_mesh \
                  ${EXPORT_SYMBOLS} -lshowviz_geom ${EXPORT_SYMBOLS} -lshowviz

SHOWVIZ_LIBS    = showviz/lib/libshowviz.a \
                  showviz/lib/libshowviz_geom.a \
                  showviz/lib/libshowviz_mesh.a \
                  showviz/lib/libshowviz_geom_mesh.a \
                  showviz/lib/libshowviz_bc.a

LP_SOLVE_LINK   = -L${LP_SOLVE_LIB_DIR} -llpk

VERDICT_LINK   = -L${VERDICT_LIB_DIR} ${VERDICT_LIB}

MESQUITE_LINK = -L${MESQUITE_LIB_DIR} ${MESQUITE_LIB}

SIMULOG_LIB  = -lCMLTet202

SIMULOG_LINK = -L${SIMULOG_LIB_DIR} ${SIMULOG_LIB}

EXTRA_GEOM_LIBS = geom/ACIS/libcubit_ACIS.a

EXTRA_GEOM_LIBS_LINK = -Lgeom/ACIS -lcubit_ACIS $(ACIS_LINK)

GEOM_LIBS = libcubit_geom.a \
            virtual/libcubit_virtual.a \
            facet/libcubit_facet.a \
            Cholla/libcholla.a \
	    facetbool/libcubit_facetboolstub.a

MDB_LIBS = ${CUBIT_BASE_DIR}/mdb/libcubit_mdb.a

CGM_LIBS = ${CUBIT_BASE_DIR}/util/libcubit_util.a $(GEOM_LIBS:%=geom/%)

CAMAL_LIBS = 	${CAMAL_LIB_DIR}/libcamal_tri.a \
		${CAMAL_LIB_DIR}/libcamal_pave.a \
		${CAMAL_LIB_DIR}/libcamal_shr.a

CUBIT_LIBS = ${CGM_LIBS} \
             ${MDB_LIBS} \
             ${CAMAL_LIBS} \
             bc/libcubit_bc.a \
             export_mesh/libexport_mesh.a

GEOM_LIBS_LINK = \
                  -Lgeom/virtual -lcubit_virtual \
                  -Lgeom/facet -lcubit_facet \
                  -Lgeom/facetbool -lcubit_facetboolstub \
                  -Lgeom -lcubit_geom \
                  -Lgeom/Cholla -lcholla \
                  -Lutil -lcubit_util

CUBIT_LIBS_LINK = \
                  -Lmdb -lcubit_mdb \
                  -Lgeom/virtual -lcubit_virtual \
                  -Lgeom/facet -lcubit_facet \
                  -Lgeom/facetbool -lcubit_facetboolstub \
                  -Lgeom -lcubit_geom \
                  -Lgeom/Cholla -lcholla \
                  -Lutil -lcubit_util \
                  -L$(CAMAL_LIB_DIR) -lcamal_tri -lcamal_pave -lcamal_shr \
                  -Lbc -lcubit_bc -Lexport_mesh -lexport_mesh

CCAPI_LIBS = ${CGM_BASE_DIR}/ccapi/util/libcubit_util_ccapi.a \
	     ${CGM_BASE_DIR}/ccapi/list/libcubit_list_ccapi.a \
             ${CGM_BASE_DIR}/ccapi/geom/libcubit_geom_ccapi.a

CCAPI_LIBS_LINK = -L${CGM_BASE_DIR}/ccapi/util -lcubit_util_ccapi \
		  -L${CGM_BASE_DIR}/ccapi/list -lcubit_list_ccapi \
                  -L${CGM_BASE_DIR}/ccapi/geom -lcubit_geom_ccapi


# This is the set of libraries that are always linked in to a CUBIT
# project, no matter what optional components are excluded.
CUBIT_3RD_PARTY_LINK = $(LP_SOLVE_LINK) \
                  $(EXODUS_LINK) \
                  $(GRAPH_DRAWING_LINK) $(VERDICT_LINK) \
                  $(MESQUITE_LINK)

CUBIT_SYS_LINK = ${X11_LINK} ${EXTRA_LIBS_LINK} ${MACH_LIBS_LINK}

CUBIT_CXXFLAGS = ${MACH_CXXFLAGS} ${CLIENT_CXXFLAGS} ${PERSONAL_DEFINES}
CUBIT_CFLAGS   = ${MACH_CFLAGS} ${PERSONAL_DEFINES}


CUBIT_LDFLAGS = ${MACH_LFLAGS}
CUBIT_DEPEND_FLAGS = ${MACH_DEPEND_FLAGS} ${CLIENT_CXXFLAGS} -DDOING_MAKE_DEPEND ${MAKE_DEPEND_INCLUDE}

LEX = flex
LEX_LIB =
L_FLAGS =

#YACC = yacc
#YFLAGS = -vdl
YACC = bison
YFLAGS = -d -b y


include ${CUBIT_BASE_DIR}/util/OtherFiles/CUBIT.$(MACHINE_TYPE)
-include ${CUBIT_BASE_DIR}/util/OtherFiles/cubit.myown

# This sets CUBIT_CXXFLAGS, which should be added to the
# .cpp.o rule of the client project.  It includes those
# flags needed to correctly use the CUBIT headers, based
# on the options that are turned on.
ifeq ($(MESQUITE_OPTION), ON)
  CUBIT_OPT_CXXFLAGS += -DCBT_USING_MESQUITE
endif

ifeq ($(OPTMS_OPTION), ON)
  CUBIT_OPT_CXXFLAGS += -DUSING_OPTMS
endif

ifneq ($(USAGE_TRACKING_OPTION),ON)
  CUBIT_OPT_CXXFLAGS += -DNO_USAGE_TRACKING
endif

ifeq ($(CAT_OPTION),ON)
  CUBIT_OPT_CXXFLAGS += -DCAT
endif

ifneq ($(FLEXLM_OPTION),ON)
  CUBIT_OPT_CXXFLAGS += -DNO_FLEXLM
endif

ifneq ($(HOOPS_OPTION),ON)
  CUBIT_OPT_CXXFLAGS += -DNO_HOOPS
endif

ifeq ($(ALPHA_CABLE_OPTION),ON)
  CUBIT_OPT_CXXFLAGS += -DALPHA_CABLE
endif

ifeq ($(ALPHA_TETDELAUNAY_OPTION),ON)
  CUBIT_OPT_CXXFLAGS += -DALPHA_TETDELAUNAY
endif

ifeq ($(GRAFT_SWEEP_OPTION),ON)
  CUBIT_OPT_CXXFLAGS += -DALPHA_GRAFTSWEEP
endif

ifeq ($(SHOWVIZ_OPTION),ON)
  CUBIT_OPT_CXXFLAGS += -DCUBIT_USE_SHOWVIZ -Ishowviz -Ishowviz/base
endif
