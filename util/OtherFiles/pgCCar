#!/bin/csh

# This script combines the prelink and ar steps for creating a static
# library using pgCC.  All arguments passed to the script ending in .o
# are treated as object files.  The argument -o followed by a file name
# is used to specify the desired output file (should end with .a)  Any
# other arguments are an error condition unless they begin with '-' in
# which case they are passed to pgCC.
#
# Jason Kraftcheck, 06-04-2001

set TEMPLATE_DIR = Template.dir
set objlist
set flaglist

set USAGE = "Usage: pgCClink <CC_flags> [--template_dir <dir_name>] -o <library_name> <object_files>"

# Scan argument list.  Put all arguments begining with a '-' in
# flaglist, and all object (.o) files in objlist.  Store the first
# argument following a -o as the output file and the first arg.
# following --template_dir as the template directory.

foreach arg ( $argv )
	if ( $?output ) then
		set output_name = "$arg"
		unset output
	else if ( $?template ) then
		set TEMPLATE_DIR = "$arg"
		unset template
	else 
		switch ( $arg )
			case -o:
				set output
				breaksw
			case --template_dir:
				set template
				breaksw
			case *.o:
				set objlist = ($objlist $arg)
				breaksw
			case -*:
				set flaglist = ($flaglist $arg)
				breaksw
			default:
				echo "Bad argument: $arg"
				echo $USAGE
				exit 1
		endsw
	endif
end
 
# If no output file was specified, can't continue
if ( ! $?output_name ) then
	echo "No output file specified."
	echo $USAGE
	exit 1
endif

# Must have at least one object file
if ( $#objlist < 1 ) then
	echo "No object files specified."
	echo $USAGE
	exit 1
endif

if ( $?template ) then
	echo "Expected directory name following --template dir option."
	echo $USAGE
	exit 1
endif

# Do prelink step
set echo
pgCC $flaglist --prelink_objects $objlist 
unset echo
if ( $status ) then
	exit $status
endif

# Check to see if there are any template objects to include
# in the archive.  This must be explicitly checked because
# csh will abort the compile step if Template.dir/* doesn't
# match anything.
foreach file ( `/bin/ls ${TEMPLATE_DIR}` )
	if ( $file =~ *.o ) then
		set have_templates
	endif
end
if( $?have_templates ) then
	set template_objs = ${TEMPLATE_DIR}/\*.o
else
	echo "No Template Objects."
	set template_objs
endif

# Finally, the archive step
set echo
ar cr $output_name $objlist $template_objs

