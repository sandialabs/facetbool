
--------------- Basic capability setup -------------------
This file describes the setup procedure for compiling the CUBIT
meshing toolkit software on HP, Solaris, and SGI 
platforms. The other files in this directory 

CUBIT.HP
CUBIT.SOL
CUBIT.SG

are used to support the local configuration data for these four platforms
respectively. 

1) To prepare to compile CUBIT, you should select the appropriate
default file from these four, and place it into your home
directory, renaming it as follows:

In your home directory (the directory which is set to your $HOME
environment variable), rename the file for your platform (a Solaris
machine in this example) to lower case and prepend it with a "."

% mv CUBIT.SOL .cubit.sol (***see Note at bottom of document)

2) This will be referred to as your local user config file. Edit
this file and replace any default paths in the file for needed
libraries and compilers with paths appropriate for your system.
These files are set up with standard unix defaults where applicable
and examples elsewhere.

3) The makefile in the cubit source directory will include these files
to use your local path settings. 

--------------- Advanced capability setup -------------------
In addition to the basic capability setup above, the local user
config files can be used to select a combination of CUBIT modules,
or collections of source code files to provide additional CUBIT
functionality. This capability is optional and may require
additional libraries to be installed, such as MPI libraries for
parallel code operations. Presently "modules" are set up for
graphics or no graphics versions, and for MPI communications
or No communications versions of CUBIT.

4) To enable parallel MPI operation, (the default assumes no
MPI communications) you must uncomment the following
five variables, supply the local paths, and ascertain that the
needed MPI libraries are present for your platform (the following
example assumes a Solaris platform)

MPI_ARCH        = solaris
MPI_COMM        = ch_p4
MPI_INSTALL_DIR = /usr/netpub/ftp.mcs.anl.gov/pub/mpi/mpi-1.0.11-install
MPI_LIB_PATH    = -L$(MPI_INSTALL_DIR)/lib/$(MPI_ARCH)/$(MPI_COMM)
MPI_LIB_LIST    = -lmpi -lsocket -lnsl -lthread
MPI_INCLUDE_DIR =  $(MPI_INSTALL_DIR)/include

and then add the following lines into your local user config file as well:

COMM_OPTION = -DMPI_COMMUNICATIONS_ENABLED
COMM_INCLUDE_OPTION = -I$(MPI_INCLUDE_DIR)
MPI_LIBS = $(MPI_LIB_PATH) $(MPI_LIB_LIST)

CUBIT will now link in MPI libraries and will enable MPI communication
calls when built.

5) To enable compilation of a no graphics version of CUBIT (the default
assumes HOOPs graphics), add the following line into your local user config
file:

GRAPHICS_OPTION = -DNO_GRAPHICS

CUBIT will now link without graphics libraries (HOOPs libraries will not need
to be present on your machine) when built.

NOTE: Steps 4 and 5 are both optional, but can be combined or added alone to
build the needed functionality.

6) Steps 4 and 5 can also be semi-automated. The following scripts in this
directory will automatically edit the .cubit.<MACHINE> file to add or
eliminate the options described in step 4 and 5. Three scripts are
available:

dot_cubit_to_mpi (appends necessary lines (3) to .cubit.<MACHINE> as in step 4)
dot_cubit_to_ng  (appends necessary line to .cubit.<MACHINE> as in step 5)
dot_cubit_reset  (resets .cubit.<MACHINE> to default status, i.e., with graphics and no MPI)

To use these scripts as written, perform the following steps (one time to setup):

   6.1) create a directory within your $HOME directory called dot_cubit_files:

        % mkdir dot_cubit_files

   6.2) move your local user config file from $HOME into dot_cubit_files (for Solaris
        in this example)

        % mv .cubit.sol dot_cubit_files

   6.3) create a soft link from your $HOME directory to $HOME/dot_cubit_files

        % ln -s dot_cubit_files/.cubit.sol .

   6.4) Go into dot_cubit_files and cp .cubit.<MACHINE> to .cubit.<MACHINE>_base
    
        % cd dot_cubit_files
        % cp .cubit.sol .cubit.sol_base

   6.5 Make sure that .cubit.<MACHINE>_base only contains the basic capability and does
       not have any MPI or no graphics definitions enabled. Also ensure that you have
       the envirnoment variable MACHINE_TYPE set. If not, add this into your .login
       or .cshrc file

       Inside .login or .cshrc
      
       setenv MACHINE_TYPE sol

Now you can switch automatically bewteen the above described modules. To reset to basic
capability, run dot_cubit_reset:

% dot_cubit_reset

For MPI, run dot_cubit_to_mpi

% dot_cubit_to_mpi

Similar for no graphics. These scripts will update your .cubit.<MACHINE> file, 
and the makefile will use the file that has been constructed. You may wish to
put these files into a $HOME/bin directory is you have one, else somewhere in
your path.

Please send questions about this capability to cubit-dev@sandia.gov

Thanks
